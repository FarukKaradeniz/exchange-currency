{"version":3,"sources":["components/CurrencyInputText.js","components/CurrencySelectList.js","components/CurrencyView.js","components/ChartView.js","components/Header.js","App.js","index.js"],"names":["CurrencyInputText","react_default","a","createElement","className","type","name","this","props","value","onChange","handleChange","placeholder","step","React","Component","CurrencySelectList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onListItemClick","index","toggleList","currencySelectEvent","listName","currencyList","currencies","map","currency","onClick","key","concat","state","listOpen","setState","prevState","_this2","selectedCurrency","CurrencyView","CurrencyInputText_CurrencyInputText","CurrencySelectList_CurrencySelectList","ChartView","es","maxWidth","maxHeight","data","Header","App","getDataForDate","date","firstCurrency","firstCurrencyIndex","secondCurrency","secondCurrencyIndex","dataForDate","updateChart","labels","weekData","forEach","label","rate","push","getWeekCurrencyData","dateFrom","moment","subtract","format","dateTo","Axios","method","url","params","start_at","end_at","then","response","rates","weekLabels","keys","sort","weekDataExist","catch","err","console","log","onCurrencyValueChanged","e","target","_this$setState","newValue","defineProperty","toFixed","_this$setState2","onCurrencySelected","_this$setState3","secondCurrencyValue","firstCurrencyValue","_this$setState4","componentWillMount","reponse","components_Header","CurrencyView_CurrencyView","ChartView_ChartView","datasets","backgroundColor","borderColor","pointBackgroundColor","fill","lineTension","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c870961d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../styles/CurrencyInputText.css';\r\n\r\nexport default class CurrencyInputText extends React.Component {  \r\n  render() {\r\n    return(\r\n      <div className=\"currency-input-text-wrapper\">\r\n        <input \r\n          type=\"number\"\r\n          name={this.props.name}\r\n          value={this.props.value}\r\n          onChange={this.props.handleChange} \r\n          className=\"currency-input-text\" \r\n          placeholder=\"Enter a currency value\"\r\n          step=\"0.01\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport '../styles/CurrencySelectList.css';\r\n\r\nexport default class CurrencySelectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n    }\r\n  }\r\n\r\n  toggleList(){\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen\r\n    }));\r\n  }\r\n\r\n  onListItemClick = (index) => {\r\n    this.toggleList();\r\n    this.props.currencySelectEvent(index, this.props.listName);\r\n  }\r\n\r\n  currencyList = () => {\r\n    const currencies = this.props.currencies.map((currency, index) => {\r\n      return <li \r\n              className=\"currency-item\"\r\n              onClick={() => this.onListItemClick(index)}\r\n              key={index} >\r\n                {currency.name}\r\n              </li>\r\n    });\r\n\r\n    return <ul className={`currency-select-list ${this.state.listOpen ? '' : ' hidden'}`}>{currencies}</ul>\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <div className=\"currency-select-list-wrapper\">\r\n        <div \r\n          onClick={() => this.toggleList()}\r\n          className=\"currency-list-header\">\r\n          {this.props.currencies[this.props.selectedCurrency].name}\r\n        </div>\r\n        {this.currencyList()}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport CurrencyInputText from './CurrencyInputText';\r\nimport CurrencySelectList from './CurrencySelectList';\r\n\r\nimport '../styles/CurrencyView.css';\r\n\r\nexport default class CurrencyView extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"currency-container\">\r\n        <CurrencyInputText \r\n          name={this.props.name}\r\n          value={this.props.value}\r\n          handleChange={this.props.handleChange} \r\n        />\r\n        <CurrencySelectList \r\n          listName={this.props.listName}\r\n          currencies={this.props.currencies}\r\n          selectedCurrency={this.props.selectedCurrency}\r\n          currencySelectEvent={this.props.currencySelectEvent}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport '../styles/ChartView.css';\r\n\r\nexport default class ChartView extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"chart-container\">\r\n        <Line \r\n          maxWidth={360}\r\n          maxHeight={180}\r\n          data={this.props.data} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport '../styles/Header.css';\r\n\r\nconst Header = (props) => {\r\n  return(\r\n    <header>\r\n      <h1 className=\"header-text\">Exchange Currency</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport CurrencyView from './components/CurrencyView';\r\nimport ChartView from './components/ChartView';\r\nimport Header from './components/Header';\r\n\r\nimport './App.css';\r\n\r\n\r\nconst baseCurrency = {\r\n\tvalue: 1,\r\n\tname: 'EUR'\r\n}; \r\n\r\nconst currencies = [ //burada sadece base currency olacak, digerleri API isteginden sonra eklenecek\r\n  baseCurrency,\r\n];\r\n\r\nlet data = {}; \r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currencies: currencies,\r\n      firstCurrencyIndex: 0, //ilk input listede seçilen kur. default 0 olacak\r\n      secondCurrencyIndex: 0,  //ikinci input listede seçilen kur. default 0 olacak\r\n      firstCurrencyValue: 1, //ilk inputtaki değer. default 1 olacak\r\n      secondCurrencyValue: 1, //ikinci inputtaki değer. default 1 olacak\r\n      weekDataExist: false, // chartview ilk başta görünmeyecek\r\n      weekData: [], //weekdata saklanacagi yer\r\n      labels: [], //weekdata labellar\r\n    };\r\n\r\n  }\r\n\r\n  getDataForDate = (date) => {\r\n    const firstCurrency = this.state.firstCurrencyIndex;\r\n    const secondCurrency = this.state.secondCurrencyIndex;\r\n    const dataForDate = data[date];\r\n    let rate = 0;\r\n    if (firstCurrency === 0 && secondCurrency === 0) {\r\n      rate = 1;\r\n    }\r\n    else if (firstCurrency === 0 && secondCurrency !== 0) {\r\n      rate = dataForDate[this.state.currencies[secondCurrency].name];\r\n    }\r\n    else if (firstCurrency !== 0 && secondCurrency === 0) {\r\n      rate = 1 / dataForDate[this.state.currencies[firstCurrency].name];\r\n    }\r\n    else {\r\n      rate = dataForDate[this.state.currencies[secondCurrency].name] / dataForDate[this.state.currencies[firstCurrency].name];\r\n    }\r\n    return rate;\r\n  };\r\n\r\n  updateChart = () => {\r\n    const labels = this.state.labels;\r\n    const weekData = [];\r\n    labels.forEach(label => {\r\n      const rate = this.getDataForDate(label);\r\n      weekData.push(rate);\r\n    });\r\n    this.setState({\r\n      weekData: weekData,\r\n    });\r\n  }\r\n\r\n  getWeekCurrencyData = () => {\r\n    const dateFrom = moment().subtract(6,'days').format('YYYY-MM-DD');\r\n    const dateTo = moment().format('YYYY-MM-DD');\r\n\r\n    Axios({\r\n      method: 'get',\r\n      url: 'https://api.exchangeratesapi.io/history',\r\n      params: {\r\n        start_at: dateFrom,\r\n        end_at: dateTo\r\n      }\r\n    }).then(response => {\r\n      data = response.data.rates;\r\n      const weekLabels = [];\r\n      const weekData = [];\r\n      Object.keys(data).sort().forEach(label => {\r\n        weekLabels.push(label);\r\n        const rate = this.getDataForDate(label);\r\n        weekData.push(rate);\r\n      });\r\n\r\n      this.setState({\r\n        weekDataExist: true,\r\n        labels: weekLabels.sort(),\r\n        weekData: weekData,\r\n      });\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  onCurrencyValueChanged = (e) => {\r\n    if (e.target.name === 'firstCurrencyValue') {\r\n      const newValue = e.target.value;\r\n      const selectedCurrency = this.state.secondCurrencyIndex;\r\n      this.setState({ \r\n        [e.target.name]: e.target.value,\r\n        secondCurrencyValue: (newValue * (currencies[selectedCurrency].value / currencies[this.state.firstCurrencyIndex].value)).toFixed(4),\r\n      }); //Sets the new value\r\n    }\r\n    else { //e.target.name === 'secondCurrencyValue'\r\n      const newValue = e.target.value;\r\n      const selectedCurrency = this.state.firstCurrencyIndex;\r\n      this.setState({ \r\n        [e.target.name]: e.target.value,\r\n        firstCurrencyValue: (newValue * (currencies[selectedCurrency].value / currencies[this.state.secondCurrencyIndex].value)).toFixed(4),\r\n      }); //Sets the new value\r\n    }\r\n  };\r\n\r\n  onCurrencySelected = (index, listName) => {\r\n    if (this.state[listName] === index) { // not changing the selected currencies\r\n      return;\r\n    }\r\n    if(listName === 'firstCurrencyIndex') {\r\n      const secondCurrencyValue = this.state.firstCurrencyValue * (currencies[this.state.secondCurrencyIndex].value / currencies[index].value);\r\n      this.setState({\r\n        [listName]: index,\r\n        secondCurrencyValue: secondCurrencyValue\r\n      }, () => this.updateChart());\r\n    }\r\n    else { // listName === 'secondCurrencyIndex'\r\n      const secondCurrencyValue = this.state.firstCurrencyValue * (currencies[index].value / currencies[this.state.firstCurrencyIndex].value);\r\n      this.setState({\r\n        [listName]: index,\r\n        secondCurrencyValue: secondCurrencyValue\r\n      }, () => this.updateChart());\r\n    }\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    Axios({\r\n      method: 'get',\r\n      url:'https://api.exchangeratesapi.io/latest'\r\n    }).then(reponse => {\r\n      const rates = reponse.data.rates;\r\n      Object.keys(reponse.data.rates).map(key => {\r\n        return {name: key, value: rates[key]};\r\n      }).forEach(rate => currencies.push(rate));\r\n      \r\n      this.setState({\r\n        currencies: currencies\r\n      }, () => {\r\n        this.getWeekCurrencyData();\r\n      });\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        <Header />\r\n        <div className=\"currencyview-wrapper\">\r\n          <CurrencyView \r\n            name={'firstCurrencyValue'}\r\n            value={this.state.firstCurrencyValue}\r\n            handleChange={this.onCurrencyValueChanged} \r\n            listName={\"firstCurrencyIndex\"}\r\n            currencies={this.state.currencies}\r\n            selectedCurrency={this.state.firstCurrencyIndex}\r\n            currencySelectEvent={this.onCurrencySelected}\r\n          />\r\n          <CurrencyView \r\n            name={'secondCurrencyValue'}\r\n            value={this.state.secondCurrencyValue}\r\n            handleChange={this.onCurrencyValueChanged} \r\n            listName={\"secondCurrencyIndex\"}\r\n            currencies={this.state.currencies}\r\n            selectedCurrency={this.state.secondCurrencyIndex}\r\n            currencySelectEvent={this.onCurrencySelected}\r\n          />\r\n          <div className=\"chartview-wrapper\">\r\n            <ChartView data={{\r\n              labels: this.state.labels, // tarih bilgileri\r\n              datasets: [\r\n                {\r\n                  backgroundColor: \"rgba(157, 227, 255, 0.4)\",\r\n                  borderColor: \"rgba(157, 227, 255, 1)\",\r\n                  pointBackgroundColor: \"rgba(107, 127, 255, 1)\",\r\n                  fill: false,\r\n                  lineTension: 0.1,\r\n                  data: this.state.weekData, // oranların datası\r\n                  label: `${this.state.currencies[this.state.firstCurrencyIndex].name}/${this.state.currencies[this.state.secondCurrencyIndex].name}`,\r\n                }\r\n              ],\r\n            }} />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}